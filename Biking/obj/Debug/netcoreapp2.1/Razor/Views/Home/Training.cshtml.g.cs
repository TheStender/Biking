#pragma checksum "C:\Projects\Biking\Biking\Views\Home\Training.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "11c87cefd1760eb6728b1b5767ac056da3a68bbe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Training), @"mvc.1.0.view", @"/Views/Home/Training.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Training.cshtml", typeof(AspNetCore.Views_Home_Training))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\Biking\Biking\Views\_ViewImports.cshtml"
using Biking;

#line default
#line hidden
#line 2 "C:\Projects\Biking\Biking\Views\_ViewImports.cshtml"
using Biking.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"11c87cefd1760eb6728b1b5767ac056da3a68bbe", @"/Views/Home/Training.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"731f96de51b5c72d8f6720a42f1406de3d886f71", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Training : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
  
    ViewData["Title"] = "Training";

#line default
#line hidden
            BeginContext(42, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 6 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
  
    DateTime raamChallengeDate = new DateTime(2020, 3, 28);
    DateTime almanzoDate = new DateTime(2020, 5, 2);
    DateTime transAmDate = new DateTime(2020, 6, 6);
    DateTime mn650Date = new DateTime(2020, 6, 19);
    DateTime steensDate = new DateTime(2020, 7, 5);
    DateTime damnDate = new DateTime(2020, 8, 3);
    DateTime hoodooDate = new DateTime(2020, 8, 23);
    DateTime incaDivideDate = new DateTime(2020, 8, 14);
    DateTime silverStateDate = new DateTime(2020, 9, 11);

    var raamCountdown = Math.Abs(Math.Floor((DateTime.Today - raamChallengeDate).TotalDays / 7));
    var almanzoCountdown = Math.Abs(Math.Floor((DateTime.Today - almanzoDate).TotalDays / 7));
    var transAmCountdown = Math.Abs(Math.Floor((DateTime.Today - transAmDate).TotalDays / 7));
    var mn650Countdown = Math.Abs(Math.Floor((DateTime.Today - mn650Date).TotalDays / 7));
    var steensCountdown = Math.Abs(Math.Floor((DateTime.Today - steensDate).TotalDays / 7));
    var damnCountdown = Math.Abs(Math.Floor((DateTime.Today - damnDate).TotalDays / 7));
    var hoodooCountdown = Math.Abs(Math.Floor((DateTime.Today - hoodooDate).TotalDays / 7));
    var incaCountdown = Math.Abs(Math.Floor((DateTime.Today - incaDivideDate).TotalDays / 7));
    var silverStateCountdown = Math.Abs(Math.Floor((DateTime.Today - silverStateDate).TotalDays / 7));

#line default
#line hidden
            BeginContext(1389, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 28 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
  
    var fifteenPlan = 15;
    var eightPlan = 8;
    var twelvePlan = 12;

    string[] weekList = new string[]
{
     "Week", "Long Ride", "Tempo Ride", "Interval Ride", "Recovery Ride", "Optional Recovery Ride", "Core Workout", "Stretching", "Strength Workout"
};

    string[,] fifteenWeekPlan = new string[,] {
{ "1", "1:30 - 2:30", "40 - 60 minutes", "30 - 40 minutes(10 - 15 mixed)", "20 - 30 minutes", "20 - 30 minutes(optional)", "2 of 10 - 20 minutes", "3 of 10 - 20 minutes", "1 - 2 of 20 - 30 minutes(optional)" },
{ "2", "2:00 - 3:00", "40-60 minutes", "30-40 minutes (10-15 mixed)", "20-30 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "3", "2:00 - 3:00", "50-75 minutes", "40-60 minutes (10-15 mixed)", "30-40 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "4", "2:30 - 3:30", "50-75 minutes", "40-60 minutes (15-20 mixed)", "30-40 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "5", "3:00 - 4:00", "60-90 minutes", "40-60 minutes (15-20 mixed)", "30-40 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "6", "3:30 - 4:30", "60 - 90 minutes", "40 - 60 minutes(15 - 20 mixed)", "40 - 60 minutes", "20 - 30 minutes(optional)", "2 of 10 - 20 minutes", "3 of 10 - 20 minutes", "1 - 2 of 20 - 30 minutes(optional)" },
{ "7", "3:30 - 4:30", "60 - 90 minutes", "60 - 90 minutes(20 - 30 mixed)", "40 - 60 minutes", "20 - 30 minutes(optional)", "2 of 10 - 20 minutes", "3 of 10 - 20 minutes", "1 - 2 of 20 - 30 minutes(optional)" },
{ "8", "1:00 - 2:00", "30 - 40 minutes", "None", "20 - 30 minutes", "20 - 30 minutes", "2 of 10 - 20 minutes", "3 of 10 - 20 minutes", "None" },
{ "9", "2:30 - 3:30", "50-75 minutes", "40-60 minutes (10-15 mixed)", "30-40 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "10", "3:00 - 4:00", "60-90 minutes", "40-60 minutes (10-15 mixed)", "40-60 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "11", "3:30 - 4:30", "60-90 minutes", "60-90 minutes (15-20 mixed)", "40-60 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "12", "4:00 - 5:00", "60-90 minutes", "60-90 minutes (15-20 mixed)", "40-60 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "13", "4:30 - 5:30", "60-90 minutes", "60-90 minutes (20-30 mixed)", "40-60 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "14", "5:15 - 6:30", "60-90 minutes", "60-90 minutes (20-30 mixed)", "40-60 minutes", "20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "1-2 of 20-30 minutes (optional)" },
{ "15", "2:30 - 3:30", "60-90 minutes", "60-90 minutes (15-20 mixed)", "40-60 minutes","20-30 minutes (optional)", "2 of 10-20 minutes", "3 of 10-20 minutes", "None" },
{ "16", "Century", "30-40 minutes", "None","20-30 minutes", "20-30 minutes", "2 of 10-20 minutes", "3 of 10-20 minutes", "None" } };

    string[,] eightWeekPlan = new string[,]
    {
{ "1","2:00 - 3:00","60-75 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)" },
{ "2","60-90 minutes brisk (20-30 mixed)","60-75 minutes","45-60 minutes (15-20 mixed)","30-40 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)" },
{ "3","3:00 - 4:00","60-90 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "4","30-45 minutes brisk (10-15 mixed)","30-45 minutes","30-45 min tempo","20-30 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"},
{ "5","4:00 - 5:00","60-90 minutes","60-90 minutes (15-20 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "6","60-90 minutes brisk (20-30 mixed)","60-90 minutes","60-90 minutes (15-20 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)" },
{ "7","5:15 - 6:30","60-90 minutes","60-90 minutes (20-30 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "8","2:30 - 3:30","60-90 minutes","60-90 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"},
{ "Century Week","Century","None","30-40 minutes (10-15 mixed)","20-30 minutes","20-30 minutes","2 of 10-20 minutes","3 of 10-20 minutes","None"}
    };

    string[,] twelveWeekPlan = new string[,]
    {
{ "1","6:30 - 7:15","40-60 minutes","30-45 minute tempo","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "2","3:30 - 4:30","60-90 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "3","7:15 - 8:00","60-90 minutes","45-60 minute tempo","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "4","2:00 - 3:00","30-40 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"},
{ "5","8:00 - 9:00","60-90 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "6","3:30 - 4:30","1:30 - 1:45","60-75 minutes (15-20 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "7","8:45 - 10:00","1:15 - 1:45","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "8","2:00 - 3:00","40-60 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"},
{ "9","9:45 - 11:00","1:15 - 1:45","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "10","3:30 - 4:30","60-90 minutes","60-75 minutes (15-20 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "11","10:45 - 12:00","60-90 minutes","40-60 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","1 of 20-30 minutes (optional)"},
{ "12","4:00 - 6:30","60-75 minutes","60-75 minutes (10-15 mixed)","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"},
{ "Event Week","Event","40-60 minutes","None","40-60 minutes","20-30 minutes (optional)","2 of 10-20 minutes","3 of 10-20 minutes","None"}
    };


#line default
#line hidden
            BeginContext(8773, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 88 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
   
    var threePlan = "Use the Fifteen Week Plan, follow it with the Eight Week Plan, and then end with the Twelve Week Plan";
    var twoPlan = "Use the Fifteen Week Plan and follow it with the Eight Week Plan";
    var onePlan = "Use the Fifteen Week Plan";

    string getPlan(double plan)
    {
        if(plan > 35)
        {
            plan -= 27;
            var numberEights = Math.Floor(plan / 8);
            return "Start with the Fifteen Week Plan, then use the Eight week plan " + numberEights + " times, and end with the Twelve Week Plan";

        }
        else if (plan > fifteenPlan)
        {
            if (plan > fifteenPlan + eightPlan + twelvePlan)
            {
                return @threePlan;
            }
            else if (plan > fifteenPlan + eightPlan)
            {
                return twoPlan;
            }
            else
            {
                return onePlan;
            }
        }
        else
        {
            return "You do not have enough time to train for this event";
        }
    }

    string getPlanVerbiage(double plan) {
        return "You have " + plan + " weeks to train. " + getPlan(plan);
    }

#line default
#line hidden
            BeginContext(9950, 160, true);
            WriteLiteral("\n<h2>Basic Training Guide</h2>\n<p><strong>Only meant for basic guide - Distances over 200 miles require a personalized training plan</strong></p>\n<p>RAAM Plan: ");
            EndContext();
            BeginContext(10111, 30, false);
#line 130 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
         Write(getPlanVerbiage(raamCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10141, 22, true);
            WriteLiteral("</p>\n<p>Almanzo Plan: ");
            EndContext();
            BeginContext(10164, 33, false);
#line 131 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
            Write(getPlanVerbiage(almanzoCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10197, 22, true);
            WriteLiteral("</p>\n<p>TransAm Plan: ");
            EndContext();
            BeginContext(10220, 33, false);
#line 132 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
            Write(getPlanVerbiage(transAmCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10253, 21, true);
            WriteLiteral("</p>\n<p>MN 650 Plan: ");
            EndContext();
            BeginContext(10275, 31, false);
#line 133 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
           Write(getPlanVerbiage(mn650Countdown));

#line default
#line hidden
            EndContext();
            BeginContext(10306, 21, true);
            WriteLiteral("</p>\n<p>Steens Plan: ");
            EndContext();
            BeginContext(10328, 32, false);
#line 134 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
           Write(getPlanVerbiage(steensCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10360, 19, true);
            WriteLiteral("</p>\n<p>DaMN Plan: ");
            EndContext();
            BeginContext(10380, 30, false);
#line 135 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
         Write(getPlanVerbiage(damnCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10410, 25, true);
            WriteLiteral("</p>\n<p>HooDoo 500 Plan: ");
            EndContext();
            BeginContext(10436, 32, false);
#line 136 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
               Write(getPlanVerbiage(hoodooCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10468, 26, true);
            WriteLiteral("</p>\n<p>Inca Divide Plan: ");
            EndContext();
            BeginContext(10495, 30, false);
#line 137 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
                Write(getPlanVerbiage(incaCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10525, 31, true);
            WriteLiteral("</p>\n<p>Silver State 508 Plan: ");
            EndContext();
            BeginContext(10557, 37, false);
#line 138 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
                     Write(getPlanVerbiage(silverStateCountdown));

#line default
#line hidden
            EndContext();
            BeginContext(10594, 75, true);
            WriteLiteral("</p>\n\n<br />\n\n<h2>15 Week Century Plan</h2>\n<table class=\"table\">\n    <tr>\n");
            EndContext();
#line 145 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
         foreach (string s in weekList)
        {

#line default
#line hidden
            BeginContext(10719, 16, true);
            WriteLiteral("            <th>");
            EndContext();
            BeginContext(10736, 1, false);
#line 147 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
           Write(s);

#line default
#line hidden
            EndContext();
            BeginContext(10737, 6, true);
            WriteLiteral("</th>\n");
            EndContext();
#line 148 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
        }

#line default
#line hidden
            BeginContext(10753, 10, true);
            WriteLiteral("    </tr>\n");
            EndContext();
#line 150 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
     for (int row = 0; row < fifteenWeekPlan.GetLength(0); row++)
    {

#line default
#line hidden
            BeginContext(10835, 13, true);
            WriteLiteral("        <tr>\n");
            EndContext();
#line 153 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
             for (int col = 0; col < fifteenWeekPlan.GetLength(1); col++)
            {

#line default
#line hidden
            BeginContext(10936, 20, true);
            WriteLiteral("                <td>");
            EndContext();
            BeginContext(10957, 25, false);
#line 155 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
               Write(fifteenWeekPlan[row, col]);

#line default
#line hidden
            EndContext();
            BeginContext(10982, 6, true);
            WriteLiteral("</td>\n");
            EndContext();
#line 156 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
            }

#line default
#line hidden
            BeginContext(11002, 14, true);
            WriteLiteral("        </tr>\n");
            EndContext();
#line 158 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
    }

#line default
#line hidden
            BeginContext(11022, 96, true);
            WriteLiteral("</table>\n<br />\n<br />\n\n<h2>8 Week Century Improvement Plan</h2>\n<table class=\"table\">\n    <tr>\n");
            EndContext();
#line 166 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
         foreach (string s in weekList)
        {

#line default
#line hidden
            BeginContext(11168, 16, true);
            WriteLiteral("            <th>");
            EndContext();
            BeginContext(11185, 1, false);
#line 168 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
           Write(s);

#line default
#line hidden
            EndContext();
            BeginContext(11186, 6, true);
            WriteLiteral("</th>\n");
            EndContext();
#line 169 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
        }

#line default
#line hidden
            BeginContext(11202, 10, true);
            WriteLiteral("    </tr>\n");
            EndContext();
#line 171 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
     for (int row = 0; row < eightWeekPlan.GetLength(0); row++)
    {

#line default
#line hidden
            BeginContext(11282, 13, true);
            WriteLiteral("        <tr>\n");
            EndContext();
#line 174 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
             for (int col = 0; col < eightWeekPlan.GetLength(1); col++)
            {

#line default
#line hidden
            BeginContext(11381, 20, true);
            WriteLiteral("                <td>");
            EndContext();
            BeginContext(11402, 23, false);
#line 176 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
               Write(eightWeekPlan[row, col]);

#line default
#line hidden
            EndContext();
            BeginContext(11425, 6, true);
            WriteLiteral("</td>\n");
            EndContext();
#line 177 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
            }

#line default
#line hidden
            BeginContext(11445, 14, true);
            WriteLiteral("        </tr>\n");
            EndContext();
#line 179 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
    }

#line default
#line hidden
            BeginContext(11465, 92, true);
            WriteLiteral("</table>\n<br />\n<br />\n\n<h2>12 Week Double Century Plan</h2>\n<table class=\"table\">\n    <tr>\n");
            EndContext();
#line 187 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
         foreach (string s in weekList)
        {

#line default
#line hidden
            BeginContext(11607, 16, true);
            WriteLiteral("            <th>");
            EndContext();
            BeginContext(11624, 1, false);
#line 189 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
           Write(s);

#line default
#line hidden
            EndContext();
            BeginContext(11625, 6, true);
            WriteLiteral("</th>\n");
            EndContext();
#line 190 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
        }

#line default
#line hidden
            BeginContext(11641, 10, true);
            WriteLiteral("    </tr>\n");
            EndContext();
#line 192 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
     for (int row = 0; row < twelveWeekPlan.GetLength(0); row++)
    {

#line default
#line hidden
            BeginContext(11722, 13, true);
            WriteLiteral("        <tr>\n");
            EndContext();
#line 195 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
             for (int col = 0; col < twelveWeekPlan.GetLength(1); col++)
            {

#line default
#line hidden
            BeginContext(11822, 20, true);
            WriteLiteral("                <td>");
            EndContext();
            BeginContext(11843, 24, false);
#line 197 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
               Write(twelveWeekPlan[row, col]);

#line default
#line hidden
            EndContext();
            BeginContext(11867, 6, true);
            WriteLiteral("</td>\n");
            EndContext();
#line 198 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
            }

#line default
#line hidden
            BeginContext(11887, 14, true);
            WriteLiteral("        </tr>\n");
            EndContext();
#line 200 "C:\Projects\Biking\Biking\Views\Home\Training.cshtml"
    }

#line default
#line hidden
            BeginContext(11907, 9, true);
            WriteLiteral("</table>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
